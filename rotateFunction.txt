396. Rotate Function

You are given an integer array nums of length n.

Assume arrk to be an array obtained by rotating nums by k positions clock-wise.
We define the rotation function F on nums as follow:

F(k) = 0 * arrk[0] + 1 * arrk[1] + ... + (n - 1) * arrk[n - 1].
Return the maximum value of F(0), F(1), ..., F(n-1).

The test cases are generated so that the answer fits in a 32-bit integer.

class Solution {
public:
    int maxRotateFunction(vector<int>& nums) {
        int size = nums.size();
        int res = 0;
        int sum = 0;
        for(int i = 0 ; i < size ; i++){
            res += nums[i]*i;
            sum += nums[i];
        }
        int max_ = res;
        for(int j = 1 ; j < size ; j++){
            int temp = res + sum - nums[size-j] *size;
            res = temp;
            max_ = max(max_,res);
        }
        return max_;
    }
};